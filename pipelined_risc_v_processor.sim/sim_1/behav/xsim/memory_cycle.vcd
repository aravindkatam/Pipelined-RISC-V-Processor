$date
   Sun Jun 29 17:31:21 2025
$end

$version
  2023.2
  $dumpfile ("memory_cycle.vcd") 
$end

$timescale
  1ps
$end

$scope module memory_cycle_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var reg 1 # regwritem $end
$var reg 1 $ memwritem $end
$var reg 2 % resultsrcm [1:0] $end
$var reg 5 & rd_m [4:0] $end
$var reg 32 ' pcplus4m [31:0] $end
$var reg 32 ( writedatam [31:0] $end
$var reg 32 ) aluresultm [31:0] $end
$var wire 1 * regwritew $end
$var wire 1 + resultsrcw $end
$var wire 5 , rd_w [4:0] $end
$var wire 32 - pcplus4w [31:0] $end
$var wire 32 . readdataw [31:0] $end
$var wire 32 / aluresultw [31:0] $end
$scope module uut $end
$var wire 1 0 clk $end
$var wire 1 1 rst $end
$var wire 1 2 regwritem $end
$var wire 1 3 memwritem $end
$var wire 1 4 resultsrcm $end
$var wire 5 5 rd_m [4:0] $end
$var wire 32 6 pcplus4m [31:0] $end
$var wire 32 7 writedatam [31:0] $end
$var wire 32 8 aluresultm [31:0] $end
$var wire 1 * regwritew $end
$var wire 1 + resultsrcw $end
$var wire 5 , rd_w [4:0] $end
$var wire 32 - pcplus4w [31:0] $end
$var wire 32 . readdataw [31:0] $end
$var wire 32 / aluresultw [31:0] $end
$var wire 32 9 readdatam [31:0] $end
$var reg 1 : regwritem_r $end
$var reg 2 ; resultsrcm_r [1:0] $end
$var reg 5 < rd_m_r [4:0] $end
$var reg 32 = pcplus4m_r [31:0] $end
$var reg 32 > readdatam_r [31:0] $end
$var reg 32 ? aluresultm_r [31:0] $end
$scope module dmem $end
$var wire 1 0 clk $end
$var wire 1 1 rst $end
$var wire 1 3 we $end
$var wire 32 8 a [31:0] $end
$var wire 32 7 wd [31:0] $end
$var wire 32 9 rd [31:0] $end
$var integer 32 @ i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
0"
0#
0$
b0 %
b11 &
b100 '
b11011110101011011011111011101111 (
b101 )
0*
0+
b0 ,
b0 -
b0 .
b0 /
00
01
02
03
04
b11 5
b100 6
b11011110101011011011111011101111 7
b101 8
b0 9
0:
b0 ;
b0 <
b0 =
b0 >
b0 ?
b10000000000 @
$end

#5000
1!
10

#10000
0!
1"
00
11
b101 9

#15000
1!
b11 ,
b100 -
b101 .
b101 /
10
b11 <
b100 =
b101 >
b101 ?

#20000
0!
1#
1$
b1 %
b10010001101000101011001111000 (
00
12
13
14
b10010001101000101011001111000 7

#25000
1!
1*
1+
10
b10010001101000101011001111000 9
1:
b1 ;

#30000
0!
0$
00
03

#35000
1!
b10010001101000101011001111000 .
10
b10010001101000101011001111000 >

#40000
0!
00

#45000
1!
10
